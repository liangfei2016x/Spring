<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:context="http://www.springframework.org/schema/context"
             xmlns:aop="http://www.springframework.org/schema/aop"
             xmlns:tx="http://www.springframework.org/schema/tx"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
                     http://www.springframework.org/schema/beans/spring-beans.xsd
                     http://www.springframework.org/schema/context
                     http://www.springframework.org/schema/context/spring-context.xsd
                     http://www.springframework.org/schema/aop
                     http://www.springframework.org/schema/aop/spring-aop.xsd
                     http://www.springframework.org/schema/tx
                     http://www.springframework.org/schema/tx/spring-tx.xsd">
	<!-- 引入外部文件 -->
	<context:property-placeholder location="classpath:jdbc.properties"/>
	<!-- 配置c3p0连接池 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${jdbc.driverClass}"></property>
		<property name="jdbcUrl" value="${jdbc.url}"></property>
		<property name="user" value="${jdbc.username}"></property>
		<property name="password" value="${jdbc.password}"></property>
	</bean>
	<!--  配置业务层-->
	<bean id="accountService" class="com.liang.spring.demo2.AccountServiceImpl">
		<property name="accountDAO" ref="accountDAO"></property>
	</bean>
	<!-- 配置DAO的类 -->
	<bean id="accountDAO" class="com.liang.spring.demo2.AccountDAOImpl">
		<!-- 引入数据库的bean 也就是c3po连接池 自动给AccountDAOImpl创建JDBC模板-->
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	<!-- 用AOP方式 进行事务管理 -->
	<!-- 配置事务管理器 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	<!-- 配置业务层的代理 -->
	<bean id="accountServiceProxy" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<!--要进行管理的目标  -->
		<property name="target" ref="accountService"></property>
		<!--注入事务管理  -->
		<property name="transactionManager" ref="transactionManager"></property>
		<!-- 注入事务属性 -->
		<property name="transactionAttributes">
			<props>
				<!-- prop的格式：
					propagation:事务的传播行为
					isolation:事务的隔离级别
					readOnly:只读(不能进行修改、删除、插入)
					-Exception:发生哪些异常回滚事务
					+Exception:发生哪些异常事务不回滚
				  -->
				<!--<prop key="tranfer">PROPAGATION_REQUIRED,readOnly</prop>-->
				<prop key="tranfer">PROPAGATION_REQUIRED</prop>
			</props>
		</property>
	</bean>

</beans>